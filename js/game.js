// var vectors = require('./vendor/gamejs/vectors'),
	// math = require('./vendor/gamejs/math'),
var	box2d = require('./vendor/Box2dWeb-2.1.a.3'),
	Car = require('./car'),
	BoxProp = require('./boxprop'),
	Plot = require('./plot'),
	Line = require('./Line');


var WIDTH_PX=960;   //screen width in pixels
var HEIGHT_PX=540; //screen height in pixels
var SCALE=8;      //how many pixels in a meter
var WIDTH_M=WIDTH_PX/SCALE; //world width in meters. for this example, world is as large as the screen
var HEIGHT_M=HEIGHT_PX/SCALE; //world height in meters
var b2world;

module.exports = function(canvas) {
	//SET UP B2WORLD
	// b2world=new box2d.b2World(new box2d.b2Vec2(0, 0), true);
	b2world=new box2d.b2World(new box2d.b2Vec2(0, 0));
	global.b2world = b2world;

	//set up box2d debug draw to draw the bodies for us.
	//in a real game, car will propably be drawn as a sprite rotated by the car's angle
	if (canvas) {
		var debugDraw = new box2d.b2DebugDraw();
		debugDraw.SetSprite(canvas.getContext("2d"));
		debugDraw.SetDrawScale(SCALE);
		debugDraw.SetFillAlpha(0.5);
		debugDraw.SetLineThickness(1.0);
		debugDraw.SetFlags(box2d.b2DebugDraw.e_shapeBit);
		b2world.SetDebugDraw(debugDraw);
	}


	// Create a new and wonderfull listener
	var listener = new box2d.Box2D.Dynamics.b2ContactListener();
	listener.BeginContact = function(contact) {
		var fa = contact.GetFixtureA(),
			fb = contact.GetFixtureB(),
			ba = fa.GetBody(),
			bb = fb.GetBody();

		if (ba.associatedCar && bb.onContact)
			bb.onContact(ba.associatedCar);
		else if (bb.associatedCar && ba.onContact)
			ba.onContact(bb.associatedCar);
	};
	b2world.SetContactListener(listener);
	
	//outer walls
	var wallWidth = 0.3,
		semiWallWidth = wallWidth / 2,
		dblWallWidth = wallWidth * 2;
	new BoxProp([WIDTH_M, wallWidth],[WIDTH_M/2, semiWallWidth]);
	new BoxProp([wallWidth, HEIGHT_M-dblWallWidth],[semiWallWidth, HEIGHT_M/2]);
	new BoxProp([WIDTH_M, wallWidth],[WIDTH_M/2, HEIGHT_M-semiWallWidth]);
	new BoxProp([wallWidth, HEIGHT_M-dblWallWidth],[WIDTH_M-semiWallWidth, HEIGHT_M/2]);

/*new Plot(3.35416666418314, [70.75, 28.375]);
new Plot(4.66666666418314, [104.875, 23.75]);
new Plot(5.22916666418314, [101.625, 45]);
new Plot(8.22916666418314, [96.125, 46.5]);
new Plot(2.04166666418314, [102.125, 9.625]);
new Plot(2.47916666418314, [46.625, 12.75]);
new Plot(2.47916666418314, [44.625, 11.125]);
new Plot(6.79166666418314, [25.125, 23.5]);
new Plot(4.41666666418314, [30.875, 20.5]);
new Plot(3.04166666418314, [62.75, 39.75]);
new BoxProp([6.83333332836628, 1.0833333283662796], [72.125, 24.625], 2.6179938779914944);
new BoxProp([8.33333332836628, 1.0833333283662796], [76, 20], 2.076941809873252);
new BoxProp([8.33333332836628, 1.0833333283662796], [80.75, 13.625], 2.3736477827122884);
new BoxProp([5.83333332836628, 1.0833333283662796], [85.875, 9.5], 2.6354471705114375);
new BoxProp([5.70833332836628, 1.0833333283662796], [90.75, 7.625], 2.949606435870417);
new BoxProp([5.70833332836628, 1.0833333283662796], [96, 7.125], 0);
new BoxProp([3.5833333283662796, 1.0833333283662796], [100.25, 7.625], 0.22689280275926285);
new BoxProp([10.58333332836628, 1.0833333283662796], [97.125, 12.625], 2.8099800957108707);
new BoxProp([7.33333332836628, 1.0833333283662796], [90.125, 17.5], 2.111848394913139);
new BoxProp([7.33333332836628, 1.0833333283662796], [87.875, 24], 1.6231562043547265);
new BoxProp([7.33333332836628, 1.0833333283662796], [88.5, 30.75], 1.3089969389957472);
new BoxProp([7.33333332836628, 1.0833333283662796], [91.875, 36.625], 0.7504915783575618);
new BoxProp([4.45833332836628, 1.0833333283662796], [100.875, 40], 0.3141592653589793);
new BoxProp([12.83333332836628, 1.0833333283662796], [89.625, 54.75], 3.01941960595019);
new BoxProp([25.20833332836628, 1.0833333283662796], [70.75, 55], 0.03490658503988659);
new BoxProp([25.20833332836628, 1.0833333283662796], [45.75, 54.5], 0);
new BoxProp([25.20833332836628, 1.0833333283662796], [46, 53.625], 0);
new BoxProp([10.33333332836628, 1.0833333283662796], [63.25, 51.875], 2.8099800957108707);
new BoxProp([6.20833332836628, 1.0833333283662796], [70.25, 48.625], 2.478367537831948);
new BoxProp([6.20833332836628, 1.0833333283662796], [74.125, 45.25], 2.4085543677521746);
new BoxProp([4.83333332836628, 1.0833333283662796], [76.875, 41], 1.8675022996339325);
new BoxProp([4.83333332836628, 1.0833333283662796], [77.25, 36.75], 1.3788101090755203);
new BoxProp([6.70833332836628, 1.0833333283662796], [74, 32.75], 0.5410520681182421);
new BoxProp([10.08333332836628, 1.0833333283662796], [28.5, 53.125], 0.2617993877991494);
new BoxProp([4.70833332836628, 1.0833333283662796], [21.75, 50.75], 0.47123889803846897);
new BoxProp([4.20833332836628, 1.0833333283662796], [18.5, 48.5], 0.7155849933176751);
new BoxProp([4.08333332836628, 1.0833333283662796], [15.875, 45.5], 0.9948376736367679);
new BoxProp([4.20833332836628, 1.0833333283662796], [14, 42.25], 1.1693705988362009);
new BoxProp([4.70833332836628, 1.0833333283662796], [12.75, 38.25], 1.3439035240356338);
new BoxProp([13.58333332836628, 1.0833333283662796], [12, 29.625], 1.53588974175501);
new BoxProp([5.45833332836628, 1.0833333283662796], [12.125, 20.375], 1.7278759594743862);
new BoxProp([5.33333332836628, 1.0833333283662796], [13.5, 16.375], 1.9722220547535925);
new BoxProp([5.33333332836628, 1.0833333283662796], [16.75, 12.75], 2.5830872929516078);
new BoxProp([5.33333332836628, 1.0833333283662796], [21.25, 10.625], 2.8623399732707004);
new BoxProp([8.33333332836628, 1.0833333283662796], [27.75, 9.25], 2.9845130209103035);
new BoxProp([8.33333332836628, 1.0833333283662796], [35.625, 8.75], 0.017453292519943295);
new BoxProp([5.70833332836628, 1.0833333283662796], [42, 9], 0.06981317007977318);
new BoxProp([6.20833332836628, 1.0833333283662796], [40.5, 10.75], 0.4537856055185257);
new BoxProp([7.70833332836628, 1.0833333283662796], [34, 9.25], 0.08726646259971647);
new BoxProp([5.70833332836628, 1.0833333283662796], [27.5, 16.875], 3.0543261909900767);
new BoxProp([5.70833332836628, 1.0833333283662796], [14.25, 2.25], 2.8448866807507573);
new BoxProp([12.58333332836628, 1.0833333283662796], [23.125, 1.125], 3.0892327760299634);
new BoxProp([19.33333332836628, 1.0833333283662796], [39, 0.875], 0);
new BoxProp([7.83333332836628, 1.0833333283662796], [52.25, 1.875], 0.29670597283903605);
new BoxProp([3.7083333283662796, 1.0833333283662796], [57.25, 4.125], 0.8028514559173916);
new BoxProp([3.5833333283662796, 1.0833333283662796], [59.125, 6.75], 1.3089969389957472);
new BoxProp([6.58333332836628, 1.0833333283662796], [59.25, 11.75], 1.6929693744344996);
new BoxProp([6.58333332836628, 1.0833333283662796], [58.25, 18], 1.8151424220741028);
new BoxProp([6.58333332836628, 1.0833333283662796], [56.25, 23.5], 2.0420352248333655);
new BoxProp([6.58333332836628, 1.0833333283662796], [52.75, 28.625], 2.356194490192345);
new BoxProp([6.45833332836628, 1.0833333283662796], [47.625, 32], 2.775073510670984);
new BoxProp([4.95833332836628, 1.0833333283662796], [42.125, 33.5], 2.9845130209103035);
new BoxProp([3.8333333283662796, 1.0833333283662796], [38, 33.25], 0.3665191429188092);
new BoxProp([3.9583333283662796, 1.0833333283662796], [34.875, 31.25], 0.8552113334772214);
new BoxProp([3.8333333283662796, 1.0833333283662796], [33.25, 28.125], 1.5009831567151235);
new BoxProp([4.33333332836628, 1.0833333283662796], [33.5, 24.5], 1.7453292519943295);
new BoxProp([5.20833332836628, 1.0833333283662796], [20.5, 29.25], 1.361356816555577);
new BoxProp([5.20833332836628, 1.0833333283662796], [22.5, 33.75], 1.0821041362364843);
new BoxProp([6.33333332836628, 1.0833333283662796], [26, 38.125], 0.8028514559173916);
new BoxProp([4.33333332836628, 1.0833333283662796], [29.875, 41.375], 0.6108652381980153);
new BoxProp([7.70833332836628, 1.0833333283662796], [35.25, 43], 0.19198621771937624);
new BoxProp([15.45833332836628, 1.0833333283662796], [46.625, 43.625], 0);
new BoxProp([8.95833332836628, 1.0833333283662796], [58.375, 42.625], 2.949606435870417);
new BoxProp([9.08333332836628, 1.0833333283662796], [59.25, 35.625], 0.5235987755982988);
new BoxProp([5.33333332836628, 1.0833333283662796], [55.5, 31.75], 1.2915436464758039);
new BoxProp([5.33333332836628, 1.0833333283662796], [56, 27.375], 2.0245819323134224);
new BoxProp([6.83333332836628, 1.0833333283662796], [58.75, 23], 2.181661564992912);
new BoxProp([6.83333332836628, 1.0833333283662796], [62.75, 18.25], 2.356194490192345);
new BoxProp([12.08333332836628, 1.0833333283662796], [69.5, 11.75], 2.3911010752322315);
new BoxProp([9.20833332836628, 1.0833333283662796], [77.5, 5.125], 2.5830872929516078);
new BoxProp([8.20833332836628, 1.0833333283662796], [84.75, 1.5], 2.8099800957108707);
new BoxProp([8.08333332836628, 1.0833333283662796], [92.125, 0.25], 3.12413936106985);
new BoxProp([8.20833332836628, 1.0833333283662796], [99.75, 0.5], 0.12217304763960307);
new BoxProp([7.08333332836628, 1.0833333283662796], [106.625, 2], 0.3665191429188092);
new BoxProp([7.20833332836628, 1.0833333283662796], [111.75, 5.5], 0.8377580409572782);
new BoxProp([7.20833332836628, 1.0833333283662796], [114.75, 11.5], 1.413716694115407);
new BoxProp([3.3333333283662796, 1.0833333283662796], [114.5, 16.375], 2.0943951023931953);
new BoxProp([3.3333333283662796, 1.0833333283662796], [112.5, 18], 2.8797932657906435);
new BoxProp([6.58333332836628, 1.0833333283662796], [108, 19], 2.949606435870417);
new BoxProp([6.58333332836628, 1.0833333283662796], [108.375, 29.125], 0.5759586531581288);
new BoxProp([6.58333332836628, 1.0833333283662796], [113.25, 32.875], 0.8203047484373349);
new BoxProp([6.58333332836628, 1.0833333283662796], [116.5, 38], 1.239183768915974);
new BoxProp([6.58333332836628, 1.0833333283662796], [117.625, 44.25], 1.5707963267948966);
new BoxProp([6.58333332836628, 1.0833333283662796], [116.75, 49.5], 1.8849555921538759);
new BoxProp([6.58333332836628, 1.0833333283662796], [114.25, 54.25], 2.1467549799530254);
new BoxProp([6.58333332836628, 1.0833333283662796], [110.5, 58.25], 2.4609142453120048);
new BoxProp([8.20833332836628, 1.0833333283662796], [104.75, 61.625], 2.722713633111154);
new BoxProp([8.20833332836628, 1.0833333283662796], [97, 63.625], 3.0543261909900767);
new BoxProp([8.20833332836628, 1.0833333283662796], [88.75, 64.125], 3.1066860685499065);
new BoxProp([16.33333332836628, 1.0833333283662796], [76.625, 64.25], 0);
new BoxProp([16.20833332836628, 1.0833333283662796], [60.5, 64.5], 3.12413936106985);
new BoxProp([16.33333332836628, 1.0833333283662796], [44.625, 64.75], 3.12413936106985);
new BoxProp([16.33333332836628, 1.0833333283662796], [28.625, 65.25], 3.1066860685499065);
new BoxProp([7.58333332836628, 1.0833333283662796], [17, 64.75], 0.22689280275926285);
new BoxProp([7.58333332836628, 1.0833333283662796], [11.125, 62.25], 0.6108652381980153);
new BoxProp([7.58333332836628, 1.0833333283662796], [5.875, 57.875], 0.8552113334772214);
new BoxProp([7.58333332836628, 1.0833333283662796], [3, 52.25], 1.3439035240356338);
new BoxProp([13.33333332836628, 1.0833333283662796], [1.875, 42.875], 1.4835298641951802);
new BoxProp([16.70833332836628, 1.0833333283662796], [1.75, 29.625], 1.6231562043547265);
new BoxProp([11.45833332836628, 1.0833333283662796], [3.375, 17.5], 1.7976891295541595);
new BoxProp([8.70833332836628, 1.0833333283662796], [6.5, 9.25], 2.076941809873252);
new BoxProp([6.70833332836628, 1.0833333283662796], [10, 4.375], 2.5132741228718345);
new BoxProp([6.83333332836628, 1.0833333283662796], [15.375, 42.75], 0.9250245035569946);
new BoxProp([6.83333332836628, 1.0833333283662796], [18.625, 45.875], 0.6806784082777885);
new BoxProp([6.70833332836628, 1.0833333283662796], [23.5, 49.25], 0.5061454830783556);
new BoxProp([6.83333332836628, 1.0833333283662796], [28.875, 51.75], 0.3490658503988659);
new BoxProp([6.83333332836628, 1.0833333283662796], [33.625, 53.125], 0.15707963267948966);*/

new BoxProp([10.875, 1], [63.75, 29.5], 0.20943951023931956);
new BoxProp([8.5, 1], [58.125, 32.375], 1.7802358370342162);
new BoxProp([9.5, 1], [62, 37], 0.22689280275926285);
new BoxProp([13.25, 1], [65, 43.75], 1.7976891295541595);
new BoxProp([5.375, 1], [68, 33], 1.7627825445142729);
new BoxProp([10.375, 1], [72.625, 37.25], 0.22689280275926285);
new BoxProp([14.625, 1], [75.625, 45.25], 1.7802358370342162);
new BoxProp([10.875, 1], [69.125, 50.875], 0.20943951023931956);
new BoxProp([8.375, 1], [57.625, 41.375], 0.20943951023931956);
new BoxProp([9.25, 1], [56.25, 49.25], 0.22689280275926285);
new BoxProp([9.25, 1], [61, 46.25], 1.7802358370342162);
new BoxProp([8.125, 1], [53.125, 44.375], 1.7976891295541595);
new BoxProp([7.125, 1], [51.375, 29.625], 1.7802358370342162);
new BoxProp([3.75, 1], [48.75, 32.125], 0.22689280275926285);
new BoxProp([2.875, 1], [47, 33.25], 1.7802358370342162);
new BoxProp([2.875, 1], [38.875, 34.75], 1.7802358370342162);
new BoxProp([7.25, 1], [42.75, 33.375], 0.17453292519943295);
new BoxProp([11.375, 1], [46.375, 25.5], 0.20943951023931956);
new BoxProp([7.75, 1], [39.5, 27.5], 1.7802358370342162);
new BoxProp([12.25, 1], [33.25, 30.5], 0.20943951023931956);
new BoxProp([11.125, 1], [44, 37.625], 0.20943951023931956);
new BoxProp([10.125, 1], [48, 43.375], 1.7802358370342162);
new BoxProp([2.5, 1], [27.375, 30.25], 1.8151424220741028);
new BoxProp([8.625, 1], [9.75, 2.75], 1.7976891295541595);
new BoxProp([18.625, 1], [3.875, 23.875], 1.7976891295541595);
new BoxProp([9.25, 1], [4.125, 5.375], 0.20943951023931956);
new BoxProp([9.25, 1], [2.125, 13.125], 0.2617993877991494);
new BoxProp([2.875, 1], [0.875, 33], 0.20943951023931956);
new BoxProp([1.75, 1], [0.125, 38.25], 0.20943951023931956);
new BoxProp([6.625, 1], [0, 41.125], 1.7976891295541595);
new BoxProp([5.875, 1], [1.75, 55.25], 0.20943951023931956);
new BoxProp([5.875, 1], [10.875, 57.125], 0.20943951023931956);
new BoxProp([8.25, 1], [17.375, 60.75], 0.20943951023931956);
new BoxProp([8.125, 1], [27.375, 60.875], 0.20943951023931956);
new BoxProp([15.75, 1], [45.125, 66], 0.20943951023931956);
new BoxProp([3.625, 1], [3.75, 57.375], 1.7627825445142729);
new BoxProp([3.625, 1], [8.125, 57.75], 1.7627825445142729);
new BoxProp([3.625, 1], [5.5, 59.125], 0.17453292519943295);
new BoxProp([2.5, 1], [13, 59], 1.7802358370342162);
new BoxProp([2.5, 1], [23.5, 61.25], 1.7802358370342162);
new BoxProp([2.5, 1], [22.25, 61.75], 0.19198621771937624);
new BoxProp([6.875, 1], [31, 64.625], 1.7802358370342162);
new BoxProp([3.25, 1], [37.625, 66], 1.7627825445142729);
new BoxProp([4.5, 1], [33, 1.875], 1.7802358370342162);
new BoxProp([5, 1], [39.25, 6.875], 1.7802358370342162);
new BoxProp([2.625, 1], [50.375, 10.625], 1.7802358370342162);
new BoxProp([7.375, 1], [64.75, 12.625], 1.7802358370342162);
new BoxProp([7.375, 1], [60, 9], 1.7802358370342162);
new BoxProp([10.375, 1], [75.75, 14.125], 1.7802358370342162);
new BoxProp([2, 1], [89.25, 21.75], 1.7802358370342162);
new BoxProp([2, 1], [92.75, 21.5], 1.7802358370342162);
new BoxProp([3.5, 1], [106.375, 22.375], 1.7802358370342162);
new BoxProp([3.875, 1], [100.375, 22.375], 1.7802358370342162);
new BoxProp([7.625, 1], [36.125, 4.25], 0.19198621771937624);
new BoxProp([10.75, 1], [44.375, 10.125], 0.22689280275926285);
new BoxProp([9, 1], [54.75, 11.125], 0.22689280275926285);
new BoxProp([21.75, 1], [50.625, 3], 0.22689280275926285);
new BoxProp([11.25, 1], [70.375, 10.375], 0.20943951023931956);
new BoxProp([8.125, 1], [67.5, 16.625], 0.22689280275926285);
new BoxProp([6.5, 1], [71.625, 14.375], 1.8151424220741028);
new BoxProp([7.875, 1], [96.375, 22.875], 0.24434609527920614);
new BoxProp([15.5, 1], [82, 20.375], 0.22689280275926285);
new BoxProp([3.375, 1], [90.875, 20.375], 0.22689280275926285);
new BoxProp([5.875, 1], [103.125, 20.5], 0.22689280275926285);
new BoxProp([14.375, 1], [112.625, 25.125], 0.22689280275926285);
new BoxProp([5.125, 1], [78.75, 10], 0.22689280275926285);
new BoxProp([3.875, 1], [65.75, 7.625], 1.7802358370342162);
new BoxProp([10.75, 1], [71, 7.25], 0.20943951023931956);
new BoxProp([3, 1], [80.875, 4.5], 0.24434609527920614);
new BoxProp([5.25, 1], [81.25, 7.75], 1.7976891295541595);
new BoxProp([4.625, 1], [80.25, 2], 1.7627825445142729);
new BoxProp([13.875, 1], [98.125, 42.625], 1.7802358370342162);
new BoxProp([13.875, 1], [101.75, 59.125], 1.7802358370342162);
new BoxProp([8.125, 1], [100, 51], 0.29670597283903605);
new BoxProp([22.625, 1], [110.25, 37.75], 0.13962634015954636);
new BoxProp([6.25, 1], [103, 66.625], 0.47123889803846897);
new BoxProp([4, 1], [30.625, 43], 1.7802358370342162);
new BoxProp([15.125, 1], [40, 46.25], 0.20943951023931956);
new BoxProp([3.75, 1], [33.375, 43.25], 1.7627825445142729);
new BoxProp([3.75, 1], [32.625, 41], 0.24434609527920614);
new BoxProp([2.5, 1], [25.375, 31.5], 0.24434609527920614);
new BoxProp([12.125, 1], [23.25, 37.125], 1.8151424220741028);
new BoxProp([8, 1], [26.125, 43.5], 0.22689280275926285);

new Line([30.5, 1], [23.625, 14.375], 1.2740903539558606, 11, false);
new Line([15.5, 1], [41.75, 16.75], 1.7627825445142729, 10, true);
new Line([15.5, 1], [53, 18.625], 1.7627825445142729, 9, false);
new Line([13.75, 1], [68.75, 23.5], 1.7627825445142729, 8, false);
new Line([19.25, 1], [81.875, 29.625], 2.1467549799530254, 7, false);
new Line([23, 1], [86.875, 44.875], 0.08726646259971647, 6, false);
new Line([25.5, 1], [81.5, 59.625], 0.767944870877505, 5, false);
new Line([19.5, 1], [51, 56.625], 1.7627825445142729, 4, false);
new Line([19.5, 1], [31.875, 52.625], 1.8500490071139892, 3, false);
new Line([19.5, 1], [16.25, 49.375], 2.2689280275926285, 2, false);
new Line([21.75, 1], [13.375, 31.625], 0.24434609527920614, 1, false);

var startPositions = [
	[7.875, 28.125],
	[12.875, 29.125],
	[14.375, 24.375],
	[9.25, 23],
	[10.875, 18.125],
	[16.125, 19.375],
	[17.875, 14.75],
	[12.625, 13.375],
	[14.25, 9],
	[19.375, 10]
];


	/*for (var i = 0; i < 150; ++i)
		new Plot(0.5 + Math.random() * 1.5, [Math.random() * 80, Math.random() *    60]);*/

	/*new BoxProp([0.8, 15], [12, 29]);
	new BoxProp([0.8, 8], [13.2, 18], 0.3);
	new BoxProp([0.8, 6], [16.5, 12.8], 0.9);
	new BoxProp([8, 0.8], [22.5, 10.2], -0.2 );

	new BoxProp([18, 0.8], [35, 9.5]);

	new Plot(1.8, [45, 10.6]);
	new Plot(2.8, [46, 12.5]);
	new Plot(1.5, [47.2, 14]);

	new BoxProp([0.8, 8.5], [41, 11.7], -1.05 );

	new BoxProp([0.8, 13], [15.3, 42], -0.5);
	new BoxProp([0.8, 13], [22, 48.5], -1);
	new BoxProp([10, 0.8], [31.5, 52.5], 0.2);
	new BoxProp([60, 2.5], [63, 54.5], 0.01);

	new BoxProp([11, 0.8], [28, 54], 0.2);
	new BoxProp([9, 0.8], [19.5, 50], 0.7);
	new BoxProp([12, 0.8], [14.1, 41.8], 1.2);

	new Plot(3.5, [32.2, 20]);
	new Plot(6.5, [24.8, 23]);

	new BoxProp([5, 1], [33.530452728271484, 43.125], 0.2792526803190927);
new BoxProp([5, 1], [29.337600708007812, 40.375], 0.5585053606381855);
new BoxProp([5, 1], [25.756677627563477, 36.75], 0.767944870877505);
new BoxProp([5, 1], [22.889986038208008, 33.125], 0.9075712110370514);*/

	// new BoxProp([18, 0.8], [0, 0]);

  /*  var fs = require('fs'),
	xml2js = require('xml2js');


function matrixToAngle(matrix) {
	var arrMatrix = matrix.match(/[\-0-9.]+/g);
	if(
		(parseFloat(arrMatrix[1]) == (-1 * parseFloat(arrMatrix[2]))) ||
		(parseFloat(arrMatrix[3]) == parseFloat(arrMatrix[0])) ||
		((parseFloat(arrMatrix[0]) * parseFloat(arrMatrix[3]) - parseFloat(arrMatrix[2]) * parseFloat(arrMatrix[1])) == 1)
	) {
		return  Math.round(Math.acos(parseFloat(arrMatrix[0])) * 180 / Math.PI);
	} else {
		return 0;
	}
}

var parser = new xml2js.Parser();
fs.readFile(__dirname + '/../circuit.svg', function(err, data) {
	parser.parseString(data, function (err, result) {
		// console.dir(result);

		var coef = 1.0/18.0;

		for (var gs = result.svg.g, i = 0, len = gs.length; i < len; ++i) {
			var calque = gs[i];

			if (calque.rect)
				for (var gi = calque.rect, ii = 0, len2 = gi.length; ii < len2; ++ii)
				{
					var rect = gi[ii].$,
						angle = rect.transform ? matrixToAngle(rect.transform) : 0;
					// console.log(rect);
					//new BoxProp([0.8, 8.5], [41, 11.7], -1.05 );
					// console.log("new BoxProp(["+rect.width * coef+', '+rect.height * coef+
					//     '], [' + rect.x * coef + ', ' + rect.y * coef + '], '+
					//     angle + ');');
					// if (rect.angle)
						// angle = parseFloat(rect.angle);
						console.log(rect.transform);

					angle *= (Math.PI / 180);

					var transform = rect.transform;

					if (rect.transform) {
						var matrix = transform.match(/[\-0-9.]+/g);
						angle = Math.atan2(parseFloat(matrix[1]), parseFloat(matrix[0]));
					}

					new BoxProp([rect.width * coef, rect.height * coef],
						[(parseFloat(rect.x) + rect.width / 2)* coef,
						(parseFloat(rect.y) + rect.height / 2) * coef], angle);

				}
		}
		console.log('Done');
	});
});
*/

	var cars = [];

	var randInt = function(min, max) {
		return Math.floor(Math.random()*(max-min))+min;
	};

	var blob = null,
		blobRemoveTimeout = null,
		removeBlobCallback = function() {
			b2world.DestroyBody(blob.plot.body);
			b2world.DestroyJoint(blob.mouseJoint);
			blob = null;
		};

	//let box2d draw it's bodies
	return {
		nbTurns: 2,
		newCar: function() {
			var car = new Car({'width':1.8,
					'length':2.5,
					'position':startPositions.shift(),
					'angle':190,
					'power':25,
					'max_steer_angle':30,
					'max_speed':60,
					'wheels':[{'x':-0.65, 'y':-0.9, 'width':0.33, 'length':0.8, 'revolving':true, 'powered':true}, //top left
								{'x':0.65, 'y':-0.9, 'width':0.33, 'length':0.8, 'revolving':true, 'powered':true}, //top right
								{'x':-0.65, 'y':0.9, 'width':0.33, 'length':0.8, 'revolving':false, 'powered':false}, //back left
								{'x':0.65, 'y':0.9, 'width':0.33, 'length':0.8, 'revolving':false, 'powered':false}]}); //back right
			cars.push(car);
			return car;
		},
		tick: function(msDuration) {
			for (var i = 0, len = cars.length; i < len; ++i)
				cars[i].update(msDuration);

			b2world.Step(msDuration/1000, 10, 8);

			b2world.ClearForces();
		},
		debugDraw: function() {
			b2world.DrawDebugData();
		},
		newBox: function(p, dynamic) {
			new BoxProp([parseFloat(p.width), parseFloat(p.height)], [parseFloat(p.left), parseFloat(p.top)], parseFloat(p.angle), dynamic);
		},
		newPlot: function(p) {
			new Plot(parseFloat(p.radius), [parseFloat(p.left), parseFloat(p.top)]);
		},
		setBlobTarget: function(x, y) {
			if (blob === null) {
				blob = {
					plot: new Plot(3, [x, y], 'dynamic', 0x0004),
					md: new box2d.Box2D.Dynamics.Joints.b2MouseJointDef()
				};

				blob.md.bodyA = b2world.GetGroundBody();
				blob.md.bodyB = blob.plot.body;
				blob.md.target.Set(x, y);
				blob.md.collideConnected = true;
				blob.md.maxForce = 1200*blob.plot.body.GetMass();
				blob.mouseJoint  = b2world.CreateJoint(blob.md);
				blob.plot.body.SetAwake(true);

			}
			else
			{
				clearTimeout(blobRemoveTimeout);
				blob.mouseJoint.SetTarget(new box2d.b2Vec2(x, y));
			}
			blobRemoveTimeout = setTimeout(removeBlobCallback, 4000);
		}
	};
};